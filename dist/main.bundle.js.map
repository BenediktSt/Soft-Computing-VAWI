{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/predator-prey/predator-prey.component.ts","webpack:///./src/app/predator-prey/utils/cell.ts","webpack:///./src/app/predator-prey/utils/rules.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/predator-prey/predator-prey.component.css","webpack:///./~/moment/locale ^\\.\\/.*$","webpack:///./src/app/app.component.html","webpack:///./src/app/predator-prey/predator-prey.component.html","webpack:///./src/app/predator-prey/utils/map.ts"],"names":[],"mappings":"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BACvB,OAAO,CAAC,KAAK,GAAG,wDAAU,CAAC;gBAC3B,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC;YACnB,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IAGL,cAAC;AAAD,CAAC;;;;;;;;;;AChQD;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;;;AAGA;AACA,iDAAkD,0BAA0B,KAAK,+BAA+B,6BAA6B,KAAK,2BAA2B,6BAA6B,KAAK,qBAAqB,0BAA0B,KAAK,mBAAmB,oBAAoB,KAAK,YAAY,kDAAkD,KAAK,sBAAsB,oBAAoB,KAAK;;AAEja;;;AAGA;AACA,2C;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtPA,kDAAkD,OAAO,iE;;;;;;;ACAzD,qrCAAqrC,+uCAA+uC,YAAY,onCAAonC,yBAAyB,IAAI,yBAAyB,yDAAyD,gBAAgB,2DAA2D,mBAAmB,0DAA0D,kBAAkB,4GAA4G,uBAAuB,+OAA+O,iBAAiB,OAAO,qBAAqB,kiB;;;;;;;;;;;;;ACA9rI;AAG9B,gBAAgB,GAAW,EAAE,GAAW;IACpC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AACrC,CAAC;AAEM,IAAM,UAAU,GAAG,SAAS,CAAC;AAC7B,IAAM,SAAS,GAAG,YAAY,CAAC;AAC/B,IAAM,aAAa,GAAG,YAAY,CAAC;AAE1C;IAKI,aACW,IAAY,EACZ,OAAgB,EAChB,kBAA0B;QAF1B,SAAI,GAAJ,IAAI,CAAQ;QACZ,YAAO,GAAP,OAAO,CAAS;QAChB,uBAAkB,GAAlB,kBAAkB,CAAQ;QAEjC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAElB,GAAG,CAAC,CAAC,IAAI,CAAC,GA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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 203;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 203\n// module chunks = 1","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Bearbeitung der Aufgaben für den Kurs Soft Computing im SS17 - VAWI';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { ChartsModule } from 'ng2-charts';\r\n\r\nimport {\r\n  MdToolbarModule,\r\n  MdCardModule,\r\n  MdButtonModule,\r\n  MdInputModule,\r\n  MdGridListModule,\r\n  MdIconModule,\r\n  MdSnackBarModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { PredatorPreyComponent } from './predator-prey/predator-prey.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PredatorPreyComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    ReactiveFormsModule,\r\n    MdToolbarModule,\r\n    BrowserAnimationsModule,\r\n    MdCardModule,\r\n    MdButtonModule,\r\n    MdInputModule,\r\n    MdGridListModule,\r\n    MdIconModule,\r\n    MdSnackBarModule,\r\n    ChartsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport { MdSnackBar } from '@angular/material';\r\nimport { Cell } from './utils/cell';\r\nimport { Map } from './utils/map';\r\nimport { Ruleset } from './utils/rules';\r\nimport { BaseChartDirective } from 'ng2-charts/ng2-charts';\r\n\r\n@Component({\r\n  selector: 'app-predator-prey',\r\n  templateUrl: './predator-prey.component.html',\r\n  styleUrls: ['./predator-prey.component.css']\r\n})\r\nexport class PredatorPreyComponent implements OnInit {\r\n  \r\n  @ViewChild(BaseChartDirective) chart: BaseChartDirective;\r\n\r\n  public size: number;\r\n  public map: Map;\r\n\r\n  public populationLevel: number;\r\n  public startLevelPredator: number;\r\n  public energyThroughEating: number;\r\n  public ruleSet: Ruleset;\r\n\r\n  public currentCell: Cell;\r\n\r\n  public newMapForm: FormGroup;\r\n  public showNewMapForm: boolean;\r\n  public baseChart: BaseChartDirective;\r\n\r\n  public lineChartType = 'line';\r\n  public lineChartData: Array<any> = [\r\n    {data: [], label: 'Beute'},\r\n    {data: [], label: 'Räuber'}\r\n  ];\r\n  public lineChartOptions: any = {\r\n    responsive: true\r\n  };\r\n  public lineChartLabels: Array<any> = [];\r\n\r\n  public lineChartColors: Array<any> = [\r\n    { // beute\r\n      backgroundColor: 'rgba(144,238,144,0.2)',\r\n      borderColor: 'rgba(0,128,0,1)',\r\n      pointBackgroundColor: 'rgba(0,128,0,1)',\r\n      pointBorderColor: '#fff',\r\n      pointHoverBackgroundColor: '#fff',\r\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n    },\r\n    { // räuber\r\n      backgroundColor: 'rgba(240,128,128,0.2)',\r\n      borderColor: 'rgba(255,0,0,1)',\r\n      pointBackgroundColor: 'rgba(255,0,0,1)',\r\n      pointBorderColor: '#fff',\r\n      pointHoverBackgroundColor: '#fff',\r\n      pointHoverBorderColor: 'rgba(77,83,96,1)'\r\n    },\r\n  ];\r\n\r\n  constructor(private fb: FormBuilder, public snackBar: MdSnackBar) {\r\n    this.populationLevel = 8;\r\n    this.startLevelPredator = 8;\r\n    this.energyThroughEating = 5;\r\n    this.ruleSet = new Ruleset(this.populationLevel, this.energyThroughEating);\r\n\r\n    this.size = 12;\r\n    this.map = new Map(this.size, this.ruleSet, this.startLevelPredator);\r\n\r\n    this.ruleSet.setMap(this.map);\r\n\r\n    this.newMapForm = this.fb.group({\r\n      size: ['', Validators.required ],\r\n      populationLevel: ['', Validators.required ],\r\n      startLevelPredator: ['', Validators.required ],\r\n      energyThroughEating: ['', Validators.required ]\r\n    });\r\n    this.showNewMapForm = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  iterate() {\r\n    this.map.iterate();\r\n    this.addDataSet();\r\n  }\r\n\r\n  reset() {\r\n    this.map = new Map(this.size, this.ruleSet, this.startLevelPredator);\r\n  }\r\n\r\n  generateNewMap() {\r\n    if (this.newMapForm.status === 'VALID') {\r\n      this.populationLevel = this.newMapForm.get('populationLevel').value;\r\n      this.startLevelPredator = this.newMapForm.get('startLevelPredator').value;\r\n      this.energyThroughEating = this.newMapForm.get('energyThroughEating').value;\r\n      this.ruleSet = new Ruleset(this.populationLevel, this.energyThroughEating);\r\n\r\n      this.size = this.newMapForm.get('size').value;\r\n      this.map = new Map(this.size, this.ruleSet, this.startLevelPredator);\r\n\r\n      this.ruleSet.setMap(this.map);\r\n      this.newMapForm.reset();\r\n      this.showNewMapForm = false;\r\n    }else {\r\n      this.snackBar.open('Bitte alle Felder befüllen.', 'OK', {\r\n      duration: 2000,\r\n    });\r\n    }\r\n  }\r\n\r\n  addDataSet() {\r\n\r\n    this.lineChartData[0].data.push(this.map.getCount('prey'));\r\n    this.lineChartData[1].data.push(this.map.getCount('predator'));\r\n    this.lineChartLabels.push(this.lineChartLabels.length + 1);\r\n\r\n    this.chart.chart.config.data.labels = this.lineChartLabels;\r\n    this.chart.chart.config.data.data = this.lineChartData;\r\n\r\n    this.chart.chart.update();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/predator-prey/predator-prey.component.ts","enum Direction {\r\n    UpLeft,\r\n    Up,\r\n    UpRight,\r\n    Left,\r\n    Right,\r\n    DownLeft,\r\n    Down,\r\n    DownRight\r\n};\r\n\r\nimport { colorEmpty, colorPredator, colorPrey } from './map';\r\n\r\nexport class Cell {\r\n\r\n    direction: Direction;\r\n    reproduced: boolean;\r\n\r\n    constructor(\r\n        public xCoordinate,\r\n        public yCoordinate,\r\n        public value: number,\r\n        public id: number,\r\n        public type: String = 'empty',\r\n        public color: String = colorEmpty) {\r\n            this.direction = null;\r\n            this.reproduced = false;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/predator-prey/utils/cell.ts","import { Cell } from './cell';\r\nimport { colorEmpty, colorPredator, colorPrey, Map } from './map';\r\n\r\nexport class Ruleset {\r\n\r\n    public map: Map;\r\n\r\n    constructor(\r\n        public populationLevel: number,\r\n        public energyThroughEating: number) { }\r\n\r\n    // No Rule\r\n    setMap(map: Map) {\r\n        this.map = map;\r\n    }\r\n\r\n    /**\r\n     * Eine Zelle vom Typ Beute erhöht jede Iteration ihr Level, außer sie war Teil einer Fortpflanzung.\r\n     */\r\n    gainEnergy(tuple: Cell[], activeCell: Cell): Cell {\r\n\r\n        const newCell: Cell = activeCell;\r\n\r\n        if (activeCell.type === 'prey' && !activeCell.reproduced) {\r\n            newCell.value++;\r\n        }\r\n\r\n        return newCell;\r\n    }\r\n\r\n    /**\r\n     * Eine Zelle vom Typ Räuber vermidnert jede Iteration ihr Level.\r\n     */\r\n    loseEnergy(tuple: Cell[], activeCell: Cell): Cell {\r\n\r\n        const newCell: Cell = activeCell;\r\n\r\n        if (activeCell.type === 'predator') {\r\n            newCell.value--;\r\n        }\r\n\r\n        return newCell;\r\n    }\r\n\r\n    /**\r\n     * Eine Zelle wird gelöscht, wenn ihr Level <=0 fällt.\r\n     */\r\n    deleteCell(tuple: Cell[], activeCell: Cell): Cell {\r\n        // const newCell: Cell = new Cell(activeCell.xCoordinate, activeCell.yCoordinate, 0, 0);\r\n        const newCell: Cell = activeCell;\r\n\r\n        if (activeCell.type !== 'empty' && activeCell.value <= 0) {\r\n            newCell.value = 0;\r\n            newCell.direction = null;\r\n            newCell.type = 'empty';\r\n            newCell.color = colorEmpty;\r\n            newCell.id = 0;\r\n        }\r\n\r\n        return newCell;\r\n    }\r\n\r\n    /**\r\n     * Eine Zelle vom Typ Beute wird für die nächste Iteration nicht mehr als Teil der Fortpflanzung betrachtet.\r\n     */\r\n    unmarkReproduktion(tuple: Cell[], activeCell: Cell): Cell {\r\n\r\n\r\n        const newCell: Cell = activeCell;\r\n\r\n        if (activeCell.reproduced) {\r\n            newCell.reproduced = false;\r\n        }\r\n\r\n        return newCell;\r\n    }\r\n\r\n    /**\r\n     * Eine Zelle vom Typ Beute erhöht erzeugt eine neue Zelle vom Typ Beute mit dem Level=1,\r\n     * wenn ihr eigenes Level das notwengie PopulationsLevel erreicht hat und\r\n     * der ausreichende Platz dafür vorhanden ist.\r\n     * Ihr Level wird dabei halbiert.\r\n     */\r\n    populate(tuple: Cell[], activeCell: Cell): Cell {\r\n\r\n        const newCell: Cell = activeCell;\r\n\r\n        // Berechnung der Neuen Zelle\r\n        if (tuple[4].value >= this.populationLevel &&\r\n            tuple[4].type === 'prey' &&\r\n            newCell.type === 'empty') {\r\n            newCell.value = 1;\r\n            newCell.type = 'prey';\r\n            newCell.color = colorPrey;\r\n            newCell.reproduced = true;\r\n            newCell.id = this.map.getNewID();\r\n            return newCell;\r\n        }\r\n\r\n\r\n        // Berechnung der Ausgangszelle\r\n        if (activeCell.type === 'prey' &&\r\n            activeCell.value >= this.populationLevel &&\r\n            tuple[3].reproduced &&\r\n            tuple[3].value === 1) {\r\n            newCell.value = Math.floor(activeCell.value / 2);\r\n            newCell.reproduced = true;\r\n        }\r\n\r\n        return newCell;\r\n\r\n    }\r\n\r\n    /**\r\n     * Eine Zelle vom Typ Beute entscheidet, in welche Richtung sie sich bewegen möchte.\r\n     * Dies passiert zufällig und kann nur auf freie Felder geschehen.\r\n     * In dieser Regel findet noch keine Bewegung statt, sondern nur die Bestimmung der Richtung.\r\n     */\r\n    moveDirectionPrey(tuple: Cell[], activeCell: Cell): Cell {\r\n\r\n        const newCell: Cell = activeCell;\r\n        const potentialDirections: number[] = [];\r\n\r\n        if (activeCell.type === 'prey' &&\r\n            !activeCell.reproduced) {\r\n            // get aviallable fields\r\n            tuple.forEach((cell, index) => {\r\n                if (cell.type === 'empty') {\r\n                    potentialDirections.push(index);\r\n                }\r\n            });\r\n\r\n            // choose direction to go to\r\n            if (potentialDirections.length !== 0) {\r\n                newCell.direction = potentialDirections[Math.floor((Math.random() * potentialDirections.length))];\r\n            }\r\n        }\r\n        return newCell;\r\n    }\r\n\r\n    /**\r\n     * Eine Zelle vom Typ Räuber entscheidet, in welche Richtung sie sich bewegen möchte.\r\n     * Der Räuber bewegt sich auf das Feld einer Beute zu.\r\n     * Wenn keine Beute im Umkreis ist, bewegt sich der Räuber auf ein zufälliges Feld.\r\n     */\r\n    moveDirectionPredator(tuple: Cell[], activeCell: Cell): Cell {\r\n\r\n        const newCell: Cell = activeCell;\r\n        const potentialDirections: number[] = [];\r\n\r\n        if (activeCell.type === 'predator') {\r\n            // search for prey or availlable fields\r\n            tuple.forEach((cell, index) => {\r\n                if (cell.type === 'prey') {\r\n                    newCell.direction = index;\r\n                    return newCell;\r\n                }else if (cell.type === 'empty') {\r\n                    potentialDirections.push(index);\r\n                }\r\n            });\r\n\r\n            // choose direction to go to\r\n            if (potentialDirections.length !== 0 && newCell.direction === null) {\r\n                newCell.direction = potentialDirections[Math.floor((Math.random() * potentialDirections.length))];\r\n            }\r\n        }\r\n        return newCell;\r\n    }\r\n\r\n    /**\r\n     * Eine Zelle vom Typ Beute setzt die bereits definierte Bewegung um\r\n     * Dies basiert auf der Ausrichtung der Zelle.\r\n     * Die Ausgangsszelle wird bei diesem Schritt geleert.\r\n     */\r\n    processMovementPrey(tuple: Cell[], activeCell: Cell): Cell {\r\n\r\n        const newCell: Cell = activeCell;\r\n\r\n        tuple.forEach((cell, index) => {\r\n            if (\r\n                cell.direction !== null &&\r\n                cell.type === 'prey' &&\r\n                activeCell.type === 'empty' &&\r\n                !activeCell.reproduced &&\r\n                (cell.direction + index) === 7) {\r\n                // New cell after movement\r\n                newCell.value = cell.value;\r\n                newCell.direction = null;\r\n                newCell.type = cell.type;\r\n                newCell.color = cell.color;\r\n                newCell.id = cell.id;\r\n            } else if (\r\n                activeCell.direction !== null &&\r\n                activeCell.type === 'prey' &&\r\n                !activeCell.reproduced &&\r\n                activeCell.id === cell.id) {\r\n                // reset the old Cell\r\n                newCell.value = 0;\r\n                newCell.direction = null;\r\n                newCell.type = 'empty';\r\n                newCell.color = colorEmpty;\r\n                newCell.id = 0;\r\n            }\r\n        });\r\n        return newCell;\r\n    }\r\n\r\n    /**\r\n     * Eine Zelle vom Typ Räuber setzt die bereits definierte Bewegung um\r\n     * Dies basiert auf der Ausrichtung der Zelle.\r\n     * Falls die neue Zelle eine Beute ist, wird diese entfernt.\r\n     * Die Ausgangsszelle wird bei diesem Schritt geleert.\r\n     */\r\n    processMovementPredator(tuple: Cell[], activeCell: Cell): Cell {\r\n\r\n        const newCell: Cell = activeCell;\r\n\r\n        tuple.forEach((cell, index) => {\r\n            if (activeCell.type === 'prey' &&\r\n                cell.type === 'predator' &&\r\n                (cell.direction + index) === 7\r\n            ) {\r\n                // remove prey\r\n                newCell.value = cell.value + this.energyThroughEating;\r\n                newCell.direction = null;\r\n                newCell.type = cell.type;\r\n                newCell.color = cell.color;\r\n                newCell.id = cell.id;\r\n            } else if (\r\n                cell.direction !== null &&\r\n                cell.type === 'predator' &&\r\n                activeCell.type === 'empty' &&\r\n                !activeCell.reproduced &&\r\n                (cell.direction + index) === 7) {\r\n                // New cell after movement\r\n                newCell.value = cell.value;\r\n                newCell.direction = null;\r\n                newCell.type = cell.type;\r\n                newCell.color = cell.color;\r\n                newCell.id = cell.id;\r\n            } else if (\r\n                activeCell.direction !== null &&\r\n                activeCell.type === 'predator' &&\r\n                activeCell.id === cell.id) {\r\n                // reset the old Cell\r\n                newCell.value = 0;\r\n                newCell.direction = null;\r\n                newCell.type = 'empty';\r\n                newCell.color = colorEmpty;\r\n                newCell.id = 0;\r\n            }\r\n        });\r\n        return newCell;\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/predator-prey/utils/rules.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 318\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\nmd-grid-tile.empty {\\r\\n  background: #B19CD9;\\r\\n}\\r\\n\\r\\nmd-grid-tile.predator {\\r\\n  background: lightcoral;\\r\\n}\\r\\n\\r\\nmd-grid-tile.prey {\\r\\n  background: lightgreen;\\r\\n}\\r\\n\\r\\n\\r\\np.thick {\\r\\n    font-weight: bold;\\r\\n}\\r\\n.content-card {\\r\\n    margin: 5px;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n    font-family: Roboto, Helvetica,sans-serif;\\r\\n}\\r\\n\\r\\nmd-grid-list {\\r\\n  height: 500px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/predator-prey/predator-prey.component.css\n// module id = 319\n// module chunks = 1","var map = {\n\t\"./af\": 75,\n\t\"./af.js\": 75,\n\t\"./ar\": 82,\n\t\"./ar-dz\": 76,\n\t\"./ar-dz.js\": 76,\n\t\"./ar-kw\": 77,\n\t\"./ar-kw.js\": 77,\n\t\"./ar-ly\": 78,\n\t\"./ar-ly.js\": 78,\n\t\"./ar-ma\": 79,\n\t\"./ar-ma.js\": 79,\n\t\"./ar-sa\": 80,\n\t\"./ar-sa.js\": 80,\n\t\"./ar-tn\": 81,\n\t\"./ar-tn.js\": 81,\n\t\"./ar.js\": 82,\n\t\"./az\": 83,\n\t\"./az.js\": 83,\n\t\"./be\": 84,\n\t\"./be.js\": 84,\n\t\"./bg\": 85,\n\t\"./bg.js\": 85,\n\t\"./bn\": 86,\n\t\"./bn.js\": 86,\n\t\"./bo\": 87,\n\t\"./bo.js\": 87,\n\t\"./br\": 88,\n\t\"./br.js\": 88,\n\t\"./bs\": 89,\n\t\"./bs.js\": 89,\n\t\"./ca\": 90,\n\t\"./ca.js\": 90,\n\t\"./cs\": 91,\n\t\"./cs.js\": 91,\n\t\"./cv\": 92,\n\t\"./cv.js\": 92,\n\t\"./cy\": 93,\n\t\"./cy.js\": 93,\n\t\"./da\": 94,\n\t\"./da.js\": 94,\n\t\"./de\": 97,\n\t\"./de-at\": 95,\n\t\"./de-at.js\": 95,\n\t\"./de-ch\": 96,\n\t\"./de-ch.js\": 96,\n\t\"./de.js\": 97,\n\t\"./dv\": 98,\n\t\"./dv.js\": 98,\n\t\"./el\": 99,\n\t\"./el.js\": 99,\n\t\"./en-au\": 100,\n\t\"./en-au.js\": 100,\n\t\"./en-ca\": 101,\n\t\"./en-ca.js\": 101,\n\t\"./en-gb\": 102,\n\t\"./en-gb.js\": 102,\n\t\"./en-ie\": 103,\n\t\"./en-ie.js\": 103,\n\t\"./en-nz\": 104,\n\t\"./en-nz.js\": 104,\n\t\"./eo\": 105,\n\t\"./eo.js\": 105,\n\t\"./es\": 107,\n\t\"./es-do\": 106,\n\t\"./es-do.js\": 106,\n\t\"./es.js\": 107,\n\t\"./et\": 108,\n\t\"./et.js\": 108,\n\t\"./eu\": 109,\n\t\"./eu.js\": 109,\n\t\"./fa\": 110,\n\t\"./fa.js\": 110,\n\t\"./fi\": 111,\n\t\"./fi.js\": 111,\n\t\"./fo\": 112,\n\t\"./fo.js\": 112,\n\t\"./fr\": 115,\n\t\"./fr-ca\": 113,\n\t\"./fr-ca.js\": 113,\n\t\"./fr-ch\": 114,\n\t\"./fr-ch.js\": 114,\n\t\"./fr.js\": 115,\n\t\"./fy\": 116,\n\t\"./fy.js\": 116,\n\t\"./gd\": 117,\n\t\"./gd.js\": 117,\n\t\"./gl\": 118,\n\t\"./gl.js\": 118,\n\t\"./gom-latn\": 119,\n\t\"./gom-latn.js\": 119,\n\t\"./he\": 120,\n\t\"./he.js\": 120,\n\t\"./hi\": 121,\n\t\"./hi.js\": 121,\n\t\"./hr\": 122,\n\t\"./hr.js\": 122,\n\t\"./hu\": 123,\n\t\"./hu.js\": 123,\n\t\"./hy-am\": 124,\n\t\"./hy-am.js\": 124,\n\t\"./id\": 125,\n\t\"./id.js\": 125,\n\t\"./is\": 126,\n\t\"./is.js\": 126,\n\t\"./it\": 127,\n\t\"./it.js\": 127,\n\t\"./ja\": 128,\n\t\"./ja.js\": 128,\n\t\"./jv\": 129,\n\t\"./jv.js\": 129,\n\t\"./ka\": 130,\n\t\"./ka.js\": 130,\n\t\"./kk\": 131,\n\t\"./kk.js\": 131,\n\t\"./km\": 132,\n\t\"./km.js\": 132,\n\t\"./kn\": 133,\n\t\"./kn.js\": 133,\n\t\"./ko\": 134,\n\t\"./ko.js\": 134,\n\t\"./ky\": 135,\n\t\"./ky.js\": 135,\n\t\"./lb\": 136,\n\t\"./lb.js\": 136,\n\t\"./lo\": 137,\n\t\"./lo.js\": 137,\n\t\"./lt\": 138,\n\t\"./lt.js\": 138,\n\t\"./lv\": 139,\n\t\"./lv.js\": 139,\n\t\"./me\": 140,\n\t\"./me.js\": 140,\n\t\"./mi\": 141,\n\t\"./mi.js\": 141,\n\t\"./mk\": 142,\n\t\"./mk.js\": 142,\n\t\"./ml\": 143,\n\t\"./ml.js\": 143,\n\t\"./mr\": 144,\n\t\"./mr.js\": 144,\n\t\"./ms\": 146,\n\t\"./ms-my\": 145,\n\t\"./ms-my.js\": 145,\n\t\"./ms.js\": 146,\n\t\"./my\": 147,\n\t\"./my.js\": 147,\n\t\"./nb\": 148,\n\t\"./nb.js\": 148,\n\t\"./ne\": 149,\n\t\"./ne.js\": 149,\n\t\"./nl\": 151,\n\t\"./nl-be\": 150,\n\t\"./nl-be.js\": 150,\n\t\"./nl.js\": 151,\n\t\"./nn\": 152,\n\t\"./nn.js\": 152,\n\t\"./pa-in\": 153,\n\t\"./pa-in.js\": 153,\n\t\"./pl\": 154,\n\t\"./pl.js\": 154,\n\t\"./pt\": 156,\n\t\"./pt-br\": 155,\n\t\"./pt-br.js\": 155,\n\t\"./pt.js\": 156,\n\t\"./ro\": 157,\n\t\"./ro.js\": 157,\n\t\"./ru\": 158,\n\t\"./ru.js\": 158,\n\t\"./sd\": 159,\n\t\"./sd.js\": 159,\n\t\"./se\": 160,\n\t\"./se.js\": 160,\n\t\"./si\": 161,\n\t\"./si.js\": 161,\n\t\"./sk\": 162,\n\t\"./sk.js\": 162,\n\t\"./sl\": 163,\n\t\"./sl.js\": 163,\n\t\"./sq\": 164,\n\t\"./sq.js\": 164,\n\t\"./sr\": 166,\n\t\"./sr-cyrl\": 165,\n\t\"./sr-cyrl.js\": 165,\n\t\"./sr.js\": 166,\n\t\"./ss\": 167,\n\t\"./ss.js\": 167,\n\t\"./sv\": 168,\n\t\"./sv.js\": 168,\n\t\"./sw\": 169,\n\t\"./sw.js\": 169,\n\t\"./ta\": 170,\n\t\"./ta.js\": 170,\n\t\"./te\": 171,\n\t\"./te.js\": 171,\n\t\"./tet\": 172,\n\t\"./tet.js\": 172,\n\t\"./th\": 173,\n\t\"./th.js\": 173,\n\t\"./tl-ph\": 174,\n\t\"./tl-ph.js\": 174,\n\t\"./tlh\": 175,\n\t\"./tlh.js\": 175,\n\t\"./tr\": 176,\n\t\"./tr.js\": 176,\n\t\"./tzl\": 177,\n\t\"./tzl.js\": 177,\n\t\"./tzm\": 179,\n\t\"./tzm-latn\": 178,\n\t\"./tzm-latn.js\": 178,\n\t\"./tzm.js\": 179,\n\t\"./uk\": 180,\n\t\"./uk.js\": 180,\n\t\"./ur\": 181,\n\t\"./ur.js\": 181,\n\t\"./uz\": 183,\n\t\"./uz-latn\": 182,\n\t\"./uz-latn.js\": 182,\n\t\"./uz.js\": 183,\n\t\"./vi\": 184,\n\t\"./vi.js\": 184,\n\t\"./x-pseudo\": 185,\n\t\"./x-pseudo.js\": 185,\n\t\"./yo\": 186,\n\t\"./yo.js\": 186,\n\t\"./zh-cn\": 187,\n\t\"./zh-cn.js\": 187,\n\t\"./zh-hk\": 188,\n\t\"./zh-hk.js\": 188,\n\t\"./zh-tw\": 189,\n\t\"./zh-tw.js\": 189\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 320;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale ^\\.\\/.*$\n// module id = 320\n// module chunks = 1","module.exports = \"<md-toolbar color=\\\"primary\\\">{{title}}</md-toolbar>\\r\\n\\r\\n\\r\\n<app-predator-prey></app-predator-prey>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 324\n// module chunks = 1","module.exports = \"<h2>\\r\\n  Darstellung eines Räuber-Beute-Systems\\r\\n</h2>\\r\\n<div *ngIf=\\\"showNewMapForm\\\">\\r\\n  <md-card class=\\\"content-card\\\">\\r\\n    <md-card-content>\\r\\n      <form [formGroup]=\\\"newMapForm\\\">\\r\\n        <md-input-container>\\r\\n          <input mdInput formControlName=\\\"size\\\" type=\\\"number\\\" placeholder=\\\"Feldgröße\\\">\\r\\n        </md-input-container>\\r\\n        <md-input-container>\\r\\n          <input mdInput formControlName=\\\"populationLevel\\\" type=\\\"number\\\" placeholder=\\\"Fortpflanzungslevel\\\">\\r\\n        </md-input-container>\\r\\n        <md-input-container>\\r\\n          <input mdInput formControlName=\\\"startLevelPredator\\\" type=\\\"number\\\" placeholder=\\\"Startlevel der Räuber\\\">\\r\\n        </md-input-container>\\r\\n        <md-input-container>\\r\\n          <input mdInput formControlName=\\\"energyThroughEating\\\" type=\\\"number\\\" placeholder=\\\"Energiegewinn durch Essen\\\">\\r\\n        </md-input-container>\\r\\n      </form>\\r\\n    </md-card-content>\\r\\n    <md-card-actions>\\r\\n      <button md-button (click)=\\\"generateNewMap()\\\">\\r\\n        <md-icon>settings</md-icon>\\r\\n        Map generieren\\r\\n      </button>\\r\\n      <button md-button (click)=\\\"showNewMapForm=false; newMapForm.reset()\\\">\\r\\n        <md-icon>close</md-icon>\\r\\n        SCHLIESSEN\\r\\n      </button>\\r\\n    </md-card-actions>\\r\\n  </md-card>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div>\\r\\n  <md-card class=\\\"content-card\\\">\\r\\n    <md-card-header>\\r\\n      <md-card-subtitle>\\r\\n        <md-input-container>\\r\\n          <input mdInput [(ngModel)]=\\\"size\\\" placeholder=\\\"Feldgröße\\\" disabled>\\r\\n        </md-input-container>\\r\\n        <md-input-container>\\r\\n          <input mdInput [(ngModel)]=\\\"populationLevel\\\" placeholder=\\\"Fortpflanzungslevel\\\" disabled>\\r\\n        </md-input-container>\\r\\n        <md-input-container>\\r\\n          <input mdInput [(ngModel)]=\\\"startLevelPredator\\\" placeholder=\\\"Startlevel der Räuber\\\" disabled>\\r\\n        </md-input-container>\\r\\n        <md-input-container>\\r\\n          <input mdInput [(ngModel)]=\\\"energyThroughEating\\\" placeholder=\\\"Energiegewinn durch Essen\\\" disabled>\\r\\n        </md-input-container>\\r\\n      </md-card-subtitle>\\r\\n    </md-card-header>\\r\\n    <md-card-content>\\r\\n      <md-grid-list [cols]=\\\"size\\\" rowHeight=\\\"fit\\\">\\r\\n        <div *ngFor=\\\"let line of map.fields\\\">\\r\\n          <md-grid-tile *ngFor=\\\"let cell of line\\\" (click)=\\\"currentCell = cell\\\" [style.background]=\\\"cell.color\\\">\\r\\n            {{cell.value}}\\r\\n          </md-grid-tile>\\r\\n        </div>\\r\\n      </md-grid-list>\\r\\n    </md-card-content>\\r\\n    <md-card-actions>\\r\\n      <button md-button (click)=\\\"map.addPrey()\\\">\\r\\n        <md-icon>add_circle_outline</md-icon>\\r\\n        Beute\\r\\n      </button>\\r\\n      <button md-button (click)=\\\"map.addPredator()\\\">\\r\\n        <md-icon>add_circle</md-icon>\\r\\n       Räuber\\r\\n      </button>\\r\\n      <button md-button (click)=\\\"iterate()\\\">\\r\\n        <md-icon>cached</md-icon>\\r\\n        Iteration\\r\\n      </button>\\r\\n      <button md-button (click)=\\\"reset()\\\">\\r\\n        <md-icon>close</md-icon>\\r\\n        Reset\\r\\n      </button>\\r\\n      <button md-button (click)=\\\"showNewMapForm=true\\\" *ngIf=\\\"!showNewMapForm\\\">\\r\\n        <md-icon>settings</md-icon>\\r\\n        Neue Map generieren\\r\\n      </button>\\r\\n    </md-card-actions>\\r\\n  </md-card>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div *ngIf=\\\"currentCell\\\">\\r\\n  <md-card class=\\\"content-card\\\">\\r\\n    <md-card-header>\\r\\n      <md-card-title> Aktuelle Zelle </md-card-title>\\r\\n    </md-card-header>\\r\\n    <md-card-content>\\r\\n      <p class=\\\"thick\\\">Koordinaten: </p>\\r\\n      <p>{{currentCell.xCoordinate}}, {{currentCell.yCoordinate}} </p>\\r\\n      <p class=\\\"thick\\\">ID: </p>\\r\\n      <p>{{currentCell.id}} </p>\\r\\n      <p class=\\\"thick\\\">Wert: </p>\\r\\n      <p>{{currentCell.value}} </p>\\r\\n      <p class=\\\"thick\\\">Typ: </p>\\r\\n      <p>{{currentCell.type}} </p>\\r\\n      <p class=\\\"thick\\\">Ausrichtung: </p>\\r\\n      <p *ngIf=\\\"currentCell.direction !== null\\\"> {{currentCell.direction}} </p>\\r\\n      <p *ngIf=\\\"currentCell.direction === null\\\"> null </p>\\r\\n      <p class=\\\"thick\\\">Nachbarn: </p>\\r\\n      <span *ngFor=\\\"let neighbour of map.getNeighbours(currentCell.xCoordinate, currentCell.yCoordinate)\\\"> \\r\\n        {{neighbour.value}} ... {{neighbour.direction}},\\r\\n      </span>\\r\\n    </md-card-content>\\r\\n    <md-card-actions>\\r\\n      <button md-button (click)=\\\"currentCell=null\\\">\\r\\n        <md-icon>close</md-icon>\\r\\n        SCHLIESSEN\\r\\n      </button>\\r\\n    </md-card-actions>\\r\\n  </md-card>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n  <md-card>\\r\\n    <canvas baseChart\\r\\n      [datasets]=\\\"lineChartData\\\"\\r\\n      [labels]=\\\"lineChartLabels\\\"\\r\\n      [colors]=\\\"lineChartColors\\\"\\r\\n      [options]=\\\"lineChartOptions\\\"\\r\\n      [chartType]=\\\"lineChartType\\\">\\r\\n    </canvas>\\r\\n  </md-card>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/predator-prey/predator-prey.component.html\n// module id = 325\n// module chunks = 1","import { Cell } from './cell';\r\nimport { Ruleset } from './rules';\r\n\r\nfunction modulo(num: number, mod: number): number {\r\n    return ((num % mod) + mod) % mod;\r\n}\r\n\r\nexport const colorEmpty = '#B19CD9';\r\nexport const colorPrey = 'lightgreen';\r\nexport const colorPredator = 'lightcoral';\r\n\r\nexport class Map {\r\n\r\n    public fields: Cell[][];\r\n    private numCells: number;\r\n\r\n    constructor(\r\n        public size: number,\r\n        public ruleSet: Ruleset,\r\n        public startLevelPredator: number) {\r\n\r\n        this.fields = [];\r\n        this.numCells = 0;\r\n\r\n        for (let i = 0; i < this.size; i++) {\r\n            this.fields[i] = [];\r\n            for (let j = 0; j < this.size; j++) {\r\n                this.fields[i][j] = new Cell(j, i, 0, 0);\r\n                // this.numCells++;\r\n            }\r\n        }\r\n    }\r\n\r\n    public getNewID() {\r\n        this.numCells++;\r\n        return this.numCells;\r\n    }\r\n\r\n    public getCount(type: string): number {\r\n        let count = 0;\r\n        this.fields.forEach(line => {\r\n            line.forEach(cell => {\r\n                if (cell.type === type) {\r\n                    count ++;\r\n                }\r\n            });\r\n        });\r\n        return count;\r\n    }\r\n\r\n    public getCell(xValue: number, yValue: number): Cell {\r\n        return this.fields[modulo(yValue, this.size)][modulo(xValue, this.size)];\r\n    }\r\n\r\n    public setCell(cell: Cell) {\r\n        this.fields[cell.yCoordinate][cell.xCoordinate] = cell;\r\n    }\r\n\r\n    public getNeighbours(xValue: number, yValue: number): Cell[] {\r\n        const tuple: Cell[] = [];\r\n\r\n        // Nachbarzellen oberhalb\r\n        tuple.push(this.getCell(xValue - 1, yValue - 1));\r\n        tuple.push(this.getCell(xValue, yValue - 1));\r\n        tuple.push(this.getCell(xValue + 1, yValue - 1));\r\n\r\n        // Nachbarzellen nebenan\r\n        tuple.push(this.getCell(xValue - 1, yValue));\r\n        tuple.push(this.getCell(xValue + 1, yValue));\r\n\r\n        // Nachbarzellen unterhalb\r\n        tuple.push(this.getCell(xValue - 1, yValue + 1));\r\n        tuple.push(this.getCell(xValue, yValue + 1));\r\n        tuple.push(this.getCell(xValue + 1, yValue + 1));\r\n\r\n        return tuple;\r\n    }\r\n\r\n    public addPrey(xValue?: number, yValue?: number) {\r\n        if (!xValue) {\r\n            xValue = Math.floor((Math.random() * this.size));\r\n        }\r\n\r\n        if (!yValue) {\r\n            yValue = Math.floor((Math.random() * this.size));\r\n        }\r\n        this.numCells++;\r\n        this.setCell(new Cell(xValue, yValue, 1, this.numCells, 'prey', colorPrey));\r\n    }\r\n\r\n    public addPredator(xValue?: number, yValue?: number) {\r\n        if (!xValue) {\r\n            xValue = Math.floor((Math.random() * this.size));\r\n        }\r\n\r\n        if (!yValue) {\r\n            yValue = Math.floor((Math.random() * this.size));\r\n        }\r\n        this.numCells++;\r\n        this.setCell(new Cell(xValue, yValue, this.startLevelPredator, this.numCells, 'predator', colorPredator));\r\n    }\r\n\r\n    public iterate() {\r\n        this.fields.forEach(line => {\r\n            line.forEach(cell => {\r\n                cell = this.ruleSet.populate(this.getNeighbours(cell.xCoordinate, cell.yCoordinate), cell);\r\n                cell = this.ruleSet.gainEnergy(this.getNeighbours(cell.xCoordinate, cell.yCoordinate), cell);\r\n                cell = this.ruleSet.loseEnergy(this.getNeighbours(cell.xCoordinate, cell.yCoordinate), cell);\r\n                cell = this.ruleSet.moveDirectionPrey(this.getNeighbours(cell.xCoordinate, cell.yCoordinate), cell);\r\n                cell = this.ruleSet.moveDirectionPredator(this.getNeighbours(cell.xCoordinate, cell.yCoordinate), cell);\r\n            });\r\n        });\r\n\r\n        this.fields.forEach(line => {\r\n            line.forEach(cell => {\r\n                if (cell.type !== 'predator') {\r\n                    cell = this.ruleSet.processMovementPredator(this.getNeighbours(cell.xCoordinate, cell.yCoordinate), cell);\r\n                }\r\n            });\r\n        });\r\n\r\n        this.fields.forEach(line => {\r\n            line.forEach(cell => {\r\n                if (cell.type !== 'empty') {\r\n                    cell = this.ruleSet.processMovementPredator(this.getNeighbours(cell.xCoordinate, cell.yCoordinate), cell);\r\n                }\r\n            });\r\n        });\r\n\r\n        this.fields.forEach(line => {\r\n            line.forEach(cell => {\r\n                if (cell.type === 'empty') {\r\n                    cell = this.ruleSet.processMovementPrey(this.getNeighbours(cell.xCoordinate, cell.yCoordinate), cell);\r\n                }\r\n            });\r\n        });\r\n\r\n        this.fields.forEach(line => {\r\n            line.forEach(cell => {\r\n                if (cell.type !== 'empty') {\r\n                    cell = this.ruleSet.processMovementPrey(this.getNeighbours(cell.xCoordinate, cell.yCoordinate), cell);\r\n                }\r\n            });\r\n        });\r\n\r\n        this.fields.forEach(line => {\r\n            line.forEach(cell => {\r\n                cell = this.ruleSet.unmarkReproduktion(this.getNeighbours(cell.xCoordinate, cell.yCoordinate), cell);\r\n                cell = this.ruleSet.deleteCell(this.getNeighbours(cell.xCoordinate, cell.yCoordinate), cell);\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/predator-prey/utils/map.ts"],"sourceRoot":""}